apply plugin: "java"
sourceCompatibility = 1.6
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceSets {
    main {
        java {
            srcDir 'src/'
        }
    }
    core {
        proto {
            srcDir 'src/de/hsd/hacking/Proto'
        }
    }
}

//dependencies {
//    testCompile 'junit:junit:4.12'
//}

//sourceSets.test.java.srcDirs = ["test/"]
//
//dependencies {
//
//    compile "com.badlogicgames.gdx:gdx:$gdxVersion"
//    compile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
//    compile "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
//    compile fileTree(dir: 'libs', include: '*.jar')
//
//    testCompile "junit:junit:4.12"
//    testCompile "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
//    testCompile "com.badlogicgames.gdx:gdx:$gdxVersion"
//    testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
//    testCompile "com.badlogicgames.gdx:gdx-box2d:$gdxVersion"
//    testCompile "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-desktop"
//}

eclipse.project {
    name = appName + "-core"
}

protobuf {
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.3.0'
    }

    generateProtoTasks.generatedFilesBaseDir = 'gen'

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { outputSubDir = '' }
            }
        }
    }
}

idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}/main");
    }
}

task deleteJar(type: Delete) {
    delete 'libs/logmanagementlib.jar'
}

task createJar(type: Copy) {
    from('build/intermediates/bundles/release/')
    into('libs/jars/')
    include('classes.jar')
    rename('classes.jar', 'logmanagementlib.jar')
}

createJar.dependsOn(deleteJar, build)