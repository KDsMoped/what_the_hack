buildscript {
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.3'
        classpath 'org.robovm:robovm-gradle-plugin:1.12.0'
        classpath "com.badlogicgames.gdx:gdx-tools:1.9.6"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.1'
    }
}

allprojects {
    apply plugin: "eclipse"
    apply plugin: "idea"

    version = '1.0'
    ext {
        appName = "hacking-game"
        gdxVersion = '1.9.6'
        roboVMVersion = '1.12.0'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'
    }

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "java"

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}

project(":android") {
    apply plugin: "android"

    configurations { natives }

    dependencies {
        compile project(":core")
        compile "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
    }
}

project(":ios") {
    apply plugin: "java"
    apply plugin: "robovm"


    dependencies {
        compile project(":core")
        compile "org.robovm:robovm-rt:$roboVMVersion"
        compile "org.robovm:robovm-cocoatouch:$roboVMVersion"
        compile "com.badlogicgames.gdx:gdx-backend-robovm:$gdxVersion"
        compile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-ios"
    }
}

project(":core") {
    apply plugin: "java"
    apply plugin: "com.google.protobuf"

    dependencies {
        compile project(":gen")
        compile "com.badlogicgames.gdx:gdx:$gdxVersion"
        compile fileTree(dir: '../libs', include: '*.jar')
        compile 'com.google.code.gson:gson:2.8.0'
        compile group: 'org.javatuples', name: 'javatuples', version: '1.2'
        compile 'com.google.protobuf:protobuf-java:3.3.0'
    }
}

project(":gen") {
    apply plugin: "java"

    dependencies {
        compile 'com.google.protobuf:protobuf-java:3.3.0'
    }
}

tasks.eclipse.doLast {
    delete ".project"
}

// Store the parameters you want to pass the texturePacker here...
project.ext.texturePacker = [ "raw_assets/img/game", "android/assets/img", "Game_Assets",
                              "raw_assets/img/ui", "android/assets/img", "UI_Assets",
                              "raw_assets/img/character", "android/assets/img", "Character_Assets"]

// Import the texture packer
import com.badlogic.gdx.tools.texturepacker.TexturePacker

// Add a new task that packs the textures for you
task texturePacker << {
    if (project.ext.has('texturePacker')) {
        logger.info "Calling TexturePacker: "+texturePacker
        TexturePacker.process(texturePacker[0], texturePacker[1], texturePacker[2])
        TexturePacker.process(texturePacker[3], texturePacker[4], texturePacker[5])
        TexturePacker.process(texturePacker[6], texturePacker[7], texturePacker[8])
    }
}